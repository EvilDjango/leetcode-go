// 剑指 Offer II 089. 房屋偷盗
//一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响小偷偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。
//
//给定一个代表每个房屋存放金额的非负整数数组 nums ，请计算 不触动警报装置的情况下 ，一夜之内能够偷窃到的最高金额。
//
//
//
//示例 1：
//
//输入：nums = [1,2,3,1]
//输出：4
//解释：偷窃 1 号房屋 (金额 = 1) ，然后偷窃 3 号房屋 (金额 = 3)。
//     偷窃到的最高金额 = 1 + 3 = 4 。
//示例 2：
//
//输入：nums = [2,7,9,3,1]
//输出：12
//解释：偷窃 1 号房屋 (金额 = 2), 偷窃 3 号房屋 (金额 = 9)，接着偷窃 5 号房屋 (金额 = 1)。
//     偷窃到的最高金额 = 2 + 9 + 1 = 12 。
//
//
//提示：
//
//1 <= nums.length <= 100
//0 <= nums[i] <= 400
//
//
//注意：本题与主站 198 题相同： https://leetcode-cn.com/problems/house-robber/
//
//通过次数4,650提交次数7,572
//
// @author xuejunc deerhunter0837@gmail.com
// @create 12/23/21 8:24 PM
package Gu0c2T

func rob(nums []int) int {
	x, y := 0, nums[0]
	for i := 1; i < len(nums); i++ {
		x, y = max(x, y), x+nums[i]
	}
	return max(x, y)
}

func max(i, j int) int {
	if i > j {
		return i
	}
	return j
}
